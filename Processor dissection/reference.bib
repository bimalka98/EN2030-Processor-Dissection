%howpublished = "\url{https://tools.ietf.org/html/rfc1331}""
@misc{smartcache,
	title = {Software {Techniques} for {Shared}-{Cache} {Multi}-{Core} {Systems}},
	howpublished = "\url{https://www.intel.com/content/www/us/en/develop/articles/software-techniques-for-shared-cache-multi-core-systems.html}",
	abstract = {by Tian Tian, Technical Marketing Engineer and Chiu-Pi Shih, Technical Marketing Engineer Introduction Design and fine-tune a},
	language = {en},
	urldate = {2020-11-06},
	journal = {Intel},
}

@misc{i3-8300,
	title = {Intel® {Core}™ i3-8300 {Processor} ({8M} {Cache}, 3.70 {GHz}) {Product} {Specifications}},
	howpublished = "\url{https://ark.intel.com/content/www/us/en/ark/products/129942/intel-core-i3-8300-processor-8m-cache-3-70-ghz.html}",
	abstract = {Intel® Core™ i3-8300 Processor (8M Cache, 3.70 GHz) quick reference guide including specifications, features, pricing, compatibility, design documentation, ordering codes, spec codes and more.},
	language = {en},
	urldate = {2020-11-06},
}

@misc{Skylake,
	title = {Skylake (client) - {Microarchitectures} - {Intel} - {WikiChip}},
	howpublished = "\url{https://en.wikichip.org/wiki/intel/microarchitectures/skylake_(client)}",
	language = {en},
	urldate = {2020-11-11},
}

@misc{Kaby,
	title = {Kaby {Lake} - {Microarchitectures} - {Intel} - {WikiChip}},
	howpublished = "\url{https://en.wikichip.org/wiki/intel/microarchitectures/kaby_lake}",
	language = {en},
	urldate = {2020-11-11},
}

@misc{Coffee,
	title = {Coffee {Lake} - {Microarchitectures} - {Intel} - {WikiChip}},
	howpublished = "\url{https://en.wikichip.org/wiki/intel/microarchitectures/coffee_lake}",
	language = {en},
	urldate = {2020-11-11},
}


@misc{Cortex-{R5},
	title = {Cortex-{R5}},
	howpublished = "\url{https://developer.arm.com/ip-products/processors/cortex-r/cortex-r5}",
	abstract = {Cortex-R5 is based on the Armv7-R architecture and provides extended fault containment for real-time applications.},
	language = {en},
	urldate = {2020-11-11},
	journal = {Arm Developer},
	author = {Ltd, Arm},
}

@misc{crspg,
	title = {ARM Cortex-R Series Programmer's Guide},
	howpublished = "\url{https://developer.arm.com/documentation/den0042/a/}",
	urldate = {2020-11-11},
}

@misc{crtrm,
	title = {Cortex-R5 Technical Reference Manual},
	howpublished = "\url{https://developer.arm.com/documentation/ddi0460/d}",
	urldate = {2020-11-11},
}

@misc{iasdm,
	title = {Intel® 64 and {IA}-32 {Architectures} {Software} {Developer} {Manuals}},
	howpublished = "\url{https://www.intel.com/content/www/us/en/develop/articles/intel-sdm.html}",
	abstract = {These manuals describe the architecture and programming environment of the Intel® 64 and IA-32 architectures.},
	language = {en},
	urldate = {2020-11-11},
	journal = {Intel},
}

@misc{iaorm,
	title = {Intel® 64 and {IA}-32 {Architectures} {Optimization} {Reference} {Manual}},
	howpublished = "\url{https://www.intel.com/content/www/us/en/develop/download/intel-64-and-ia-32-architectures-optimization-reference-manual.html}",
	abstract = {The Intel® 64 and IA-32 architectures optimization reference manual provides information on current Intel microarchitectures. It describes code optimization techniques to enable you to tune your application for highly optimized results when run on current Intel® processors. For all Intel® 64 and IA-32 Architectures Software Developer Manuals, see: https://software.intel.com/en-us/articles/intel-sdm},
	language = {en},
	urldate = {2020-11-11},
	journal = {Intel},
}


@misc{pcmag,
	title = {Definition of microarchitecture},
	howpublished = "\url{https://www.pcmag.com/encyclopedia/term/microarchitecture}",
	abstract = {What does microarchitecture actually mean? Find out inside PCMag's comprehensive tech and computer-related encyclopedia.},
	language = {en},
	urldate = {2020-11-14},
	journal = {PCMAG},
}

@inproceedings{TCLS,
	title = {A {Triple} {Core} {Lock}-{Step} ({TCLS}) {ARM}® {Cortex}®-{R5} {Processor} for {Safety}-{Critical} and {Ultra}-{Reliable} {Applications}},
	doi = {10.1109/DSN-W.2016.57},
	abstract = {This paper introduces the ARM Triple Core Lock-Step (TCLS) architecture, which builds up on the industry success of the ARM Cortex-R5 Dual-Core Lock-Step (DCLS) processor currently used in safety-critical real-time applications. The TCLS architecture adds a third redundant CPU unit to the DCLS Cortex-R5 system to achieve fail functional capabilities and hence increase the availability of the system. The TCLS architecture allows for transparent, quicker and more reliable resynchronization of the CPUs in the event of an error as the erroneous CPU can be identified by comparing its outputs, and the correct architectural state can be restored from one of the other two functionally correct CPUs. The quick resynchronization is also possible because there is no need to correct the state of the cache memories, which are shared and isolated from the CPUs. As the TCLS architecture provides reliability at the system level, individual CPUs do not need to be fault-tolerant, and can be implemented using commercial technology process that provides higher performance, better energy and cost efficiency than rad-hard process technology. The expectation is that the TCLS could increase reliability in the industrial applications where ARM processors are mainstream (e.g., automotive), as well as in new applications where there is currently no presence of ARM technology (e.g., space).},
	booktitle = {2016 46th {Annual} {IEEE}/{IFIP} {International} {Conference} on {Dependable} {Systems} and {Networks} {Workshop} ({DSN}-{W})},
	author = {Iturbe, X. and Venu, B. and Ozer, E. and Das, S.},
	month = jun,
	year = {2016},
	keywords = {multiprocessing systems, triple core lock-step ARM Cortex-R5 processor, TCLS architecture, safety-critical real-time applications, Central Processing Unit, Reliability, Satellites, Clocks, Registers, Telecommunications, Real-time systems, Reliability, Lock-Step, Safety, Automotive, Space, ARM Processor},
	pages = {246--249},
}

@misc{developer,
	title = {Cortex-{R5}},
	howpublished = "\url{https://developer.arm.com/ip-products/processors/cortex-r/cortex-r5}",
	abstract = {Cortex-R5 is based on the Armv7-R architecture and provides extended fault containment for real-time applications.},
	language = {en},
	urldate = {2020-11-14},
	journal = {Arm Developer},
	author = {Ltd, Arm},
}

@misc{howstuffworks,
	title = {How {Microprocessors} {Work}},
	howpublished = "\url{https://computer.howstuffworks.com/microprocessor.htm}",
	abstract = {The microprocessor determines the processing power available for any application you run -- without it, there IS no computer. Learn all about this amazing, ever-shrinking technology that makes your computer compute.},
	language = {en},
	urldate = {2020-11-14},
	journal = {HowStuffWorks},
	month = apr,
	year = {2000},
}

@misc{ARMref,
	title = {ARM Architecture Reference Manual(ARMv7-A and ARMv7-R edition)},
	howpublished = "\url{https://developer.arm.com/documentation/ddi0406/latest/}",
	urldate = {2020-11-17},
}

@misc{ARMpg,
	title = {ARM Cortex-R Programmers Guide},
	howpublished = "\url{https://developer.arm.com/documentation/den0042/a/}",
	urldate = {2020-11-17},
}

@misc{harrison_overview_2015,
	title = {An overview of the {ARM} {Cortex}-{R5} core},
	howpublished = "\url{http://www.electronicproducts.com/an-overview-of-the-arm-cortex-r5-core/}",
	abstract = {Cortex-R series of cores from ARM focus on real-time},
	language = {en-US},
	urldate = {2020-11-17},
	journal = {Electronic Products},
	author = {Harrison, Jim},
	month = mar,
	year = {2015},
}

@misc{WikiARM,
	title = {{ARM} {Cortex}-{R}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	howpublished = "\url{https://en.wikipedia.org/w/index.php?title=ARM_Cortex-R&oldid=977947427}",
	abstract = {The ARM Cortex-R is a family of 32-bit and 64-bit RISC ARM processor cores licensed by Arm Holdings. The cores are optimized for hard real-time and safety-critical applications. Cores in this family implement the ARM Real-time (R) profile, which is one of three architecture profiles, the other two being the Application (A) profile implemented by the Cortex-A family and the Microcontroller (M) profile implemented by the Cortex-M family. The ARM Cortex-R family of microprocessors currently consists of ARM Cortex-R4(F), ARM Cortex-R5(F), ARM Cortex-R7(F), ARM Cortex-R8(F), ARM Cortex-R52(F), and ARM Cortex-R82(F).},
	language = {en},
	urldate = {2020-11-17},
	journal = {Wikipedia},
	month = sep,
	year = {2020},
	note = {Page Version ID: 977947427},
}

@misc{i3doc,
	title = {Intel® {Core}™ i3-8300 {Processor} ({8M} {Cache}, 3.70 {GHz}) {Product} {Specifications}},
	howpublished = "\url{https://ark.intel.com/content/www/us/en/ark/products/129942/intel-core-i3-8300-processor-8m-cache-3-70-ghz.html}",
	abstract = {Intel® Core™ i3-8300 Processor (8M Cache, 3.70 GHz) quick reference guide including specifications, features, pricing, compatibility, design documentation, ordering codes, spec codes and more.},
	language = {en},
	urldate = {2020-11-17},
}

@misc{x64asm,
	title = {Introduction to x64 {Assembly}},
	howpublished = "\url{https://www.intel.com/content/www/us/en/develop/articles/introduction-to-x64-assembly.html}",
	abstract = {For years, PC programmers used x86 assembly to write performance-critical code. However, 32-bit PCs are being replaced with 64-bit ones, and the underlying assembly code has changed. This white paper is an introduction to x64 assembly.},
	language = {en},
	urldate = {2020-11-17},
	journal = {Intel},
}

@misc{i3dev,
	title = {Intel® 64 and {IA}-32 {Architectures} {Developer}'s {Manual}: {Vol}. {2A}},
	shorttitle = {Intel® 64 and {IA}-32 {Architectures} {Developer}'s {Manual}},
	howpublished = "\url{https://www.intel.com/content/www/us/en/architecture-and-technology/64-ia-32-architectures-software-developer-vol-2a-manual.html}",
	abstract = {Architectures Software Developer's Manual: Intel® 64 and IA-32, Vol. 2A: instruction set reference, A-M},
	language = {en},
	urldate = {2020-11-17},
	journal = {Intel},
}
